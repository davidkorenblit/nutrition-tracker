import requests
try:
    import requests
except ImportError:
    print("ERROR: requests not installed!")
    print("Run: pip install requests")
    exit(1)

print("Script started...")  # בדיקה שהסקריפט רץ
import json

BASE_URL = "http://127.0.0.1:8000/api/v1"

print("=" * 70)
print("🧪 Testing Authentication & Data Isolation")
print("=" * 70)

# Step 1: Register User 1 (David)
print("\n[1/6] Registering User 1 (David)...")
response = requests.post(f"{BASE_URL}/auth/register", json={
    "email": "david@test.com",
    "password": "123456",
    "name": "David"
})
if response.status_code == 201:
    print("✅ David registered successfully")
    user1 = response.json()
    print(f"   User ID: {user1['id']}, Email: {user1['email']}")
else:
    print(f"❌ Failed: {response.status_code} - {response.text}")
    exit(1)

# Step 2: Register User 2 (Yossi)
print("\n[2/6] Registering User 2 (Yossi)...")
response = requests.post(f"{BASE_URL}/auth/register", json={
    "email": "yossi@test.com",
    "password": "123456",
    "name": "Yossi"
})
if response.status_code == 201:
    print("✅ Yossi registered successfully")
    user2 = response.json()
    print(f"   User ID: {user2['id']}, Email: {user2['email']}")
else:
    print(f"❌ Failed: {response.status_code} - {response.text}")
    exit(1)

# Step 3: Login as David
print("\n[3/6] Logging in as David...")
response = requests.post(f"{BASE_URL}/auth/login", json={
    "email": "david@test.com",
    "password": "123456"
})
if response.status_code == 200:
    david_token = response.json()["access_token"]
    print("✅ David logged in successfully")
    print(f"   Token: {david_token[:30]}...")
else:
    print(f"❌ Failed: {response.status_code} - {response.text}")
    exit(1)

# Step 4: David creates meals
print("\n[4/6] David creating meals for 2025-10-06...")
response = requests.get(
    f"{BASE_URL}/meals/?date=2025-10-06",
    headers={"Authorization": f"Bearer {david_token}"}
)
if response.status_code == 200:
    david_meals = response.json()
    print(f"✅ David has {len(david_meals)} meals")
    for meal in david_meals:
        print(f"   - {meal['meal_type']}: ID={meal['id']}, user_id={meal.get('user_id', 'N/A')}")
else:
    print(f"❌ Failed: {response.status_code} - {response.text}")
    exit(1)

# Step 5: Login as Yossi
print("\n[5/6] Logging in as Yossi...")
response = requests.post(f"{BASE_URL}/auth/login", json={
    "email": "yossi@test.com",
    "password": "123456"
})
if response.status_code == 200:
    yossi_token = response.json()["access_token"]
    print("✅ Yossi logged in successfully")
    print(f"   Token: {yossi_token[:30]}...")
else:
    print(f"❌ Failed: {response.status_code} - {response.text}")
    exit(1)

# Step 6: Yossi tries to see David's meals
print("\n[6/6] Yossi checking meals for 2025-10-06...")
response = requests.get(
    f"{BASE_URL}/meals/?date=2025-10-06",
    headers={"Authorization": f"Bearer {yossi_token}"}
)
if response.status_code == 200:
    yossi_meals = response.json()
    print(f"✅ Yossi has {len(yossi_meals)} meals")
    for meal in yossi_meals:
        print(f"   - {meal['meal_type']}: ID={meal['id']}, user_id={meal.get('user_id', 'N/A')}")
else:
    print(f"❌ Failed: {response.status_code} - {response.text}")
    exit(1)

# Final Check
print("\n" + "=" * 70)
print("📊 RESULTS:")
print("=" * 70)

david_meal_ids = {meal['id'] for meal in david_meals}
yossi_meal_ids = {meal['id'] for meal in yossi_meals}

if david_meal_ids.intersection(yossi_meal_ids):
    print("❌ FAILED: Yossi can see David's meals!")
    print(f"   Shared meal IDs: {david_meal_ids.intersection(yossi_meal_ids)}")
    print("\n⚠️  Authentication is NOT working properly!")
else:
    print("✅ PASSED: Data isolation is working!")
    print(f"   David's meals: {david_meal_ids}")
    print(f"   Yossi's meals: {yossi_meal_ids}")
    print("\n🎉 Authentication is working perfectly!")

print("=" * 70)